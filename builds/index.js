!function(s,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(s="undefined"!=typeof globalThis?globalThis:s||self).parseRug=t()}(this,(function(){"use strict";class s{constructor(s={}){this.result=[],this.currentIndentLevel=0,this.options={...s}}parse(s){const t=s.split("\n");let e=[],n=[];for(let s=0;s<t.length;s++){const i=t[s],r=this.getIndentLevel(i),l=i.trim();if(l)if(l.startsWith(".")||l.startsWith("#")){for(e.length&&(this.processParagraphs(e),e=[]);n.length>0&&r<=n[n.length-1].indent;)this.result.push(n.pop().closeTag);const{openTag:s,closeTag:t,content:i}=this.parseClassLine(l);this.result.push(`${s}${i}`),n.push({indent:r,closeTag:t})}else r>0&&n.length>0&&r>n[n.length-1].indent?this.result.push(i.slice(r)):l.includes("<")?(e.length&&(this.processParagraphs(e),e=[]),this.result.push(i)):e.push(i);else e.length&&(this.processParagraphs(e),e=[])}for(e.length&&this.processParagraphs(e);n.length>0;)this.result.push(n.pop().closeTag);return`<div style="white-space: pre-wrap">\n${this.result.join("\n")}\n</div>`}getIndentLevel(s){const t=s.match(/^(\s*)/);return t?t[1].length:0}parseClassLine(s){const t=s.trim().split(" "),e=t[0],n=t.slice(1).join(" "),i={tag:"span",classes:[],id:null,attributes:{}},r=e.match(/([.#][^.#\[]+|\[[^\]]+\])/g)||[];for(const s of r)if(s.startsWith("."))i.classes.push(s.slice(1));else if(s.startsWith("#"))i.id=s.slice(1);else if(s.startsWith("[")&&s.endsWith("]")){const t=s.slice(1,-1),[e,...n]=t.split("="),r=n.join("=");i.attributes[e]=r.replace(/^["']|["']$/g,"")}let l=`<${i.tag}`;i.classes.length>0&&(l+=` class="${i.classes.join(" ")}"`),i.id&&(l+=` id="${i.id}"`);for(const[s,t]of Object.entries(i.attributes))l+=` ${s}="${t}"`;return l+=">",{openTag:l,closeTag:`</${i.tag}>`,content:n}}processParagraphs(s){const t=[];let e=[];for(const n of s)""===n.trim()?e.length&&(t.push(e.join("\n")),e=[]):e.push(n);e.length&&t.push(e.join("\n"));for(const s of t)s.trim()&&this.result.push(`<p>${s}</p>`)}}return function(t,e={}){return new s(e).parse(t)}}));
//# sourceMappingURL=index.js.map
